using Engine.Archetypes;
using PlayGen.ITAlert.Simulation.Archetypes;
using PlayGen.ITAlert.Simulation.Common;
using PlayGen.ITAlert.Simulation.Components.Movement;
using PlayGen.ITAlert.Simulation.Modules.Malware.Components;
using PlayGen.ITAlert.Simulation.Modules.Resources.Components;

namespace PlayGen.ITAlert.Simulation.Modules.Malware.Archetypes
{
	public static class Virus
	{
		public static readonly Archetype Archetype = new Archetype(nameof(Virus))
			.Extends(Actor.Archetype)
			.HasComponent<Components.Malware>()
			.HasComponent(new ComponentBinding<MovementSpeed>()
				{
					ComponentTemplate = new MovementSpeed()
					{
						Value = SimulationConstants.MalwareSpeed,
					}
				}
			)
			.HasComponent<MalwareVisibility>()
			.HasComponent<MalwareGenome>()
			.HasComponent(new ComponentBinding<MalwarePropogation>()
			{
				ComponentTemplate = new MalwarePropogation()
				{ 
					TicksRemaining = -1,
					Interval = SimulationConstants.MalwarePropogationInterval,
					IntervalVariation = SimulationConstants.MalwarePropogationIntervalVariation,
					RollThreshold = SimulationConstants.MalwarePropogationRoll,
				}
			})
			.HasComponent(new ComponentBinding<ConsumeMemory>()
			{
				ComponentTemplate = new ConsumeMemory()
				{
					Value = SimulationConstants.MalwareMemoryConsumption,
				}
			})
			.HasComponent(new ComponentBinding<ConsumeCPU>()
			{
				ComponentTemplate = new ConsumeCPU()
				{
					Value = SimulationConstants.MalwareCPUConsumption,
				}
			});
	}
}
