using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using PlayGen.ITAlert.Simulation.Common;
using PlayGen.ITAlert.Simulation.Components.Items;
using PlayGen.ITAlert.Simulation.Components.Malware;
using PlayGen.ITAlert.Simulation.UI;
using UnityEngine;

namespace PlayGen.ITAlert.Unity.Simulation
{
	public static class MalwareGenomeExtensions
	{
		private static Color Red = new Color(1.0f, 0f, 0f);
		private static Color Green = new Color(0f, 1.0f, 0f);
		private static Color Blue = new Color(0f, 0f, 1.0f);
		private static Color Cyan = new Color(0f, 1.0f, 1.0f);
		private static Color Magenta = new Color(1.0f, 0f, 1.0f);
		private static Color Yellow = new Color(1.0f, 1.0f, 0f);
		private static Color White = new Color(1.0f, 1.0f, 1.0f);


		public static Color GetColourForGenome(this int genome)
		{
			var colour = (MalwareColour) genome;
			switch (colour)
			{
				case MalwareColour.Red:
					return Red;
				case MalwareColour.Green:
					return Green;
				case MalwareColour.Blue:
					return Blue;
				case MalwareColour.Cyan:
					return Cyan;
				case MalwareColour.Magenta:
					return Magenta;
				case MalwareColour.Yellow:
					return Yellow;
				case MalwareColour.White:
				default:
					return White;
			}
		}

		public static Color GetColourForGenome(this MalwareGenome genome)
		{
			return genome.Value.GetColourForGenome();
		}

		public static Color GetColourForGenome(this Antivirus antivirus)
		{
			return antivirus.TargetGenome.GetColourForGenome();
		}
	}
}
